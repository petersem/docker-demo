services:
  #
  # autoheal - restarts unhealthy containers
  #
  autoheal:
    container_name: autoheal
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
      - TZ=$TZ
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    image: willfarrell/autoheal

  #
  # Portainer - docker manager
  #
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DOCKER_PATH/portainer:/data
    environment:
      - TZ=$TZ

  #
  # Watchtower - updates containers with latest images
  #
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
    environment:
      TZ: $TZ
      WATCHTOWER_REMOVE_VOLUMES: "true"
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_INCLUDE_STOPPED: "true"
      WATCHTOWER_POLL_INTERVAL: $WT_INTERVAL
      WATCHTOWER_TIMEOUT: 15
      WATCHTOWER_NOTIFICATIONS_LEVEL: info
      WATCHTOWER_NOTIFICATIONS: shoutrrr
      # Using Pushbullet, telegram and pushover as examples, but just pick one
      # WATCHTOWER_NOTIFICATION_URL: "pushover://shoutrrr:$PUSHOVER_APP_API__SECRET@$PUSHOVER_USER_API__SECRET/?devices=$PUSHOVER_DEVICE telegram://$TELEGRAM_BOT_TOKEN__SECRET@telegram?channels=$TELEGRAM_CHAT_ID__SECRET pushbullet://$PUSHBULLET_API__SECRET"
    restart: always

  #
  # Dozzle - Container log aggregator
  #
  dozzle:
    container_name: dozzle
    image: amir20/dozzle
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080
    restart: unless-stopped

  #
  # Prowlarr - index aggregator
  #
  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:nightly
    ports:
      - 9696:9696
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=002
    volumes:
      - $DOCKER_PATH/prowlarr:/config
    labels: 
      - autoheal="true"
    healthcheck:
      test: curl -fSs http://127.0.0.1:9696 > /dev/null || exit 1
      start_period: 20s
      timeout: 5s
      interval: 5s
      retries: 3    
    restart: unless-stopped
    depends_on:
      sabnzbd:
        condition: service_healthy
      qbittorrent:
        condition: service_healthy

  #
  # Radarr - Movies Search
  #
  radarr:
    environment:
      - UMASK_SET=22
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKER_PATH/radarr:/config:rw
      - $MEDIA_PATH:/media:rw
      - $DOWNLOADS:/downloads:rw
    container_name: radarr
    labels: 
      - autoheal="true"
    healthcheck:
      test: curl -fSs http://127.0.0.1:7878 > /dev/null || exit 1
      start_period: 20s
      timeout: 5s
      interval: 5s
      retries: 3
    ports:
      - 7878:7878
    restart: unless-stopped
    entrypoint:
      - /init
    image: linuxserver/radarr
    depends_on:
      sabnzbd:
        condition: service_healthy
      qbittorrent:
        condition: service_healthy

  #
  # Sonarr - Show Search
  #
  sonarr:
    environment:
      - UMASK_SET=22
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKER_PATH/sonarr:/config:rw
      - $MEDIA_PATH:/media:rw
      - $DOWNLOADS:/downloads:rw
    container_name: sonarr
    labels: 
      - autoheal="true"
    healthcheck:
      test: curl -fSs http://127.0.0.1:8989 || exit 1
      start_period: 90s
      timeout: 5s
      interval: 5s
      retries: 3
    ports:
      - 8989:8989
    restart: 'unless-stopped'
    entrypoint:
      - /init
    image: linuxserver/sonarr:develop
    depends_on:
      sabnzbd:
        condition: service_healthy
      qbittorrent:
        condition: service_healthy

  lidarr:
    image: linuxserver/lidarr:nightly
    container_name: lidarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK_SET=022 
    volumes:
      - $DOCKER_PATH/lidarr:/config
      - $MEDIA_PATH:/media
      - $DOWNLOADS:/downloads:rw
    ports:
      - 8686:8686
    restart: unless-stopped
    labels: 
      - autoheal="true"
    healthcheck:
      test: curl -fSs http://127.0.0.1:8686 > /dev/null || exit 1
      start_period: 20s
      timeout: 5s
      interval: 5s
      retries: 3
    depends_on:
      sabnzbd:
        condition: service_healthy
      qbittorrent:
        condition: service_healthy

  #
  # Bazarr - subtitles search
  #
  bazarr:
    image: linuxserver/bazarr:development
    container_name: bazarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK_SET=022 #optional
    volumes:
      - $DOCKER_PATH/bazarr:/config
      - $MEDIA_PATH:/media
    ports:
      - 6767:6767
    labels: 
      - autoheal="true"
    healthcheck:
      test: curl -fSs http://127.0.0.1:6767 > /dev/null || exit 1
      start_period: 60s
      timeout: 5s
      interval: 5s
      retries: 3
    restart: unless-stopped
    mem_limit: 300M
    mem_reservation: 250M

  #
  # Sabnzbd - Usenet downloader
  #
  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels: 
      - autoheal="true"
    healthcheck:
      test: curl -fSs 127.0.0.1:8080 > /dev/null || exit 1
      start_period: 20s
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - $DOCKER_PATH/sabnzbd:/config
      - $DOWNLOADS:/downloads:rw
      - $INCOMPLETE:/incomplete-downloads:rw
    ports:
      - 8080:8080
      - 9090:9090
    restart: unless-stopped  
  
  #
  # E-Book Searcher
  #
  readarr:
    container_name: readarr
    ports:
      - 8787:8787
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKER_PATH/readarr:/config
      - $MEDIA_PATH:/media:rw
      - $DOWNLOADS:/downloads:rw
    image: hotio/readarr:nightly    
    restart: unless-stopped
    labels: 
      - autoheal="true"
    healthcheck:
      test: curl -fSs http://127.0.0.1:8787 > /dev/null || exit 1
      start_period: 20s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      sabnzbd:
        condition: service_healthy
      qbittorrent:
        condition: service_healthy

  #
  # Qbittorrent - default creds are admin & adminadmin
  #
  qbittorrent:
    image: hotio/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK_SET=022
    volumes:
      - $DOCKER_PATH/qbittorrent:/config
      - $DOWNLOADS:/downloads
    # this line forces qbittorrent to use the vpn container (in network stack)
    # network_mode: "container:vpn"
    ports:
      - 7881:6881
      - 8081:8080
    restart: unless-stopped
    labels: 
      - autoheal="true"
    healthcheck:
      test: curl -fSs https://google.com || exit 1
      start_period: 90s
      timeout: 10s
      interval: 5s
      retries: 3

  # Poster
  posterr:
    image: petersem/posterr
    container_name: posterr
    environment:
      TZ: $TZ
    volumes:
      - $DOCKER_PATH/posterr/randomthemes:/usr/src/app/public/randomthemes
      - $DOCKER_PATH/posterr/config:/usr/src/app/config
    ports:
      - 9876:3000
    restart: always

  # gaps - finds missing movies in plex libraries
  gaps:
    ports:
      - 8484:8484
    container_name: gaps
    expose:
      - '32400'
    volumes:
      - $DOCKER_PATH/gaps:/usr/data
    image: housewrecker/gaps
    restart: unless-stopped  

  plex:
    container_name: plex
    restart: unless-stopped
    image: linuxserver/plex
    volumes:
      - $DOCKER_PATH/plex/config:/config
      - $DOCKER_PATH/plex/transcode:/transcode
      - $MEDIA_PATH:/media
    network_mode: host
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - HOSTNAME=$HOST_NAME
      - PLEX_CLAIM=$PLEX_CLAIM_TOKEN
      - ADVERTISE_IP=$ADVERTISE_IP
      - VERSION=docker
      - ALLOWED_NETWORKS=$ALLOWED_NETWORKS
    labels: 
      autoheal: 'true'
    healthcheck:
      test: curl -fsS http://localhost:32400/identity > /dev/null || exit 1
      start_period: 20s
      timeout: 10s
      interval: 5s
      retries: 3
    # Un-comment the below if you have an embedded intel GPU
    devices:
      - /dev/dri:/dev/dri

  tautulli:
    environment:
      - HOME=/root
      - TERM=xterm
      - TAUTULLI_DOCKER=True
      - TZ=$TZ
    volumes:
      - $DOCKER_PATH/tautulli:/config:rw
      - $DOCKER_PATH/plex/config/Library/Application Support/Plex Media Server/Logs:/logs:ro
    container_name: tautulli
    ports:
      - 8181:8181
    labels: 
      autoheal: 'true'
    healthcheck:
      test: curl -ILfSs http://localhost:8181/status > /dev/null || curl -ILfkSs https://localhost:8181/status > /dev/null
      start_period: 120s
      timeout: 10s
      interval: 5s
      retries: 3
    restart: 'unless-stopped'
    image: tautulli/tautulli
    depends_on:
      plex:
        condition: service_healthy
      